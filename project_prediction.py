# -*- coding: utf-8 -*-
"""project_prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10RPf_e5oQkvKnk8QNmrzKAoFblMpxW6N

Welcome to the AI Agile Project Management Notebook! This notebook demonstrates a machine learning model that predicts project completion times based on past project data. It integrates AI-driven solutions to enhance Agile Project Management.

## Steps to Run the Notebook
1. Import necessary libraries.
2. Generate sample project data.
3. Preprocess the data for modeling.
4. Train a machine learning model.
5. Evaluate and display the model's performance.

Let's get started!
"""

### Import Libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error

"""## Creating a CSV"""

import pandas as pd
# Generate sample project data
data = {
    'Feature1': [10, 20, 30, 40, 50],
    'Feature2': [20, 30, 40, 50, 60],
    'Feature3': [30, 40, 50, 60, 70],
    'CompletionTime': [40, 50, 60, 70, 80]
}

# Create a DataFrame
df = pd.DataFrame(data)

# Save DataFrame to a CSV file
df.to_csv('project_data.csv', index=False)

print("CSV file created successfully.")

"""## Load Dataset"""

# Load the dataset from the CSV file
data = pd.read_csv('project_data.csv')
print(data)

"""## Main Code"""

X = data[['Feature1', 'Feature2', 'Feature3']]  # Features
y = data['CompletionTime']  # Target
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)

predictions = model.predict(X_test)
mae = mean_absolute_error(y_test, predictions)
print(f'Mean Absolute Error: {mae}')

"""## Display Results"""

results = pd.DataFrame({'Actual': y_test, 'Predicted': predictions})
print(results)